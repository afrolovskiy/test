# Configuration file for runtime kernel parameters.

# A value from 0 to 100 which controls the degree to which the system
# favors anonymous memory or the page cache.
# A high value improves file-system performance, while aggressively
# swapping less active processes out of physical memory.
# A low value avoids swapping processes out of memory, which usually
# decreases latency, at the cost of I/O performance.
# The default value is 60.
# Setting swappiness=0 more aggressively avoids swapping out,
# which increases the risk of OOM killing under strong memory and I/O pressure.
vm.swappiness = 0

# The number of incoming connections that can queue up before dropping.
# Raising that value to more than 65535 can even be dangerous.
# See more at http://serverfault.com/questions/518862/will-increasing-net-core-somaxconn-make-a-difference#519152
# Default is 128.
net.core.somaxconn = 1000

# The length of the network device input queue.
# The rate at which packets are buffered by the network card
# before being handed off to the CPU.
# Increasing the value can improve performance on machines with
# a high amount of bandwidth.
net.core.netdev_max_backlog = 5000

# The maximum number of file-handles that the Linux kernel will allocate.
# We generally tune this file to improve the number of open files by
# increasing the value to something reasonable like 256 for every 4M of RAM we have:
# i.e. for a machine with 128 MB of RAM, set it to 8192 - 128/4=32 32*256=8192.
# Per-process limit is set in /etc/security/limits.conf.
fs.file-max = 100000

# Allow to reuse TIME_WAIT sockets for new connections when it is safe
# from protocol viewpoint.
net.ipv4.tcp_tw_reuse = 1

# The maximum number of sockets in TIME_WAIT state allowed in the system.
# This limit exists only to prevent simple denial-of-service attacks.
# The default value of NR_FILE*2 is adjusted depending on the memory in the system.
# If this number is exceeded, the socket is closed and a warning is printed.
# net.ipv4.tcp_max_tw_buckets = 2000000

# If enabled, provide RFC 2861 behavior and time out the congestion window after an idle period.
# An idle period is defined as the current RTO (retransmission timeout).
# If disabled, the congestion window will not be timed out after an idle period.
# net.ipv4.tcp_slow_start_after_idle = 0

# Linux autotuning TCP buffer limits.
# Don't set tcp_mem itself! Let the kernel scale it based on RAM.

# The maximum socket receive buffer size in bytes which a user may set by using the SO_RCVBUF socket option.
# net.core.rmem_max = 16777216

# The maximum socket send buffer size in bytes which a user may set by using the SO_SNDBUF socket option.
# net.core.wmem_max = 16777216

# The default setting in bytes of the socket receive buffer.
# net.core.rmem_default = 16777216

# The default setting in bytes of the socket send buffer.
# net.core.wmem_default = 16777216

# Maximum length of ancillary data and user control data like the iovecs per socket.
# net.core.optmem_max = 40960

# This is a vector of 3 integers: [min, default, max].
# These parameters are used by TCP to regulate receive buffer sizes.
# TCP dynamically adjusts the size of the receive buffer from the
# defaults listed below, in the range of these values, depending on memory available in the system.
# min - minimum size of the receive buffer used by each TCP socket.
# The default value is the system page size.
# (On Linux 2.4, the default value is 4K, lowered to PAGE_SIZE bytes  in  low-memory  systems.)
# This value is used to ensure that in memory pressure mode, allocations below this size will still succeed.
# This is not used to bound the size of the receive buffer declared using SO_RCVBUF on a socket.
# default - the default size of the receive buffer for a TCP socket.
# This value overwrites the initial default buffer size from the generic global
# net.core.rmem_default defined for all protocols.
# The  default  value  is  87380 bytes.
# (On Linux 2.4, this will be lowered to 43689 in low-memory systems.)
# If larger receive buffer sizes are desired, this value should be increased (to affect all sockets).
# To employ large TCP windows, the net.ipv4.tcp_window_scaling must be enabled (default).
# max - the maximum size of the receive buffer used by each TCP socket.
# This value does not override the global net.core.rmem_max.
# This is not used to limit the size of the receive buffer declared using SO_RCVBUF on a socket.
# The default value is calculated using the formula max(87380, min(4MB, tcp_mem[1]*PAGE_SIZE/128))
# (On Linux 2.4, the default is 87380*2 bytes, lowered to 87380 in low-memory systems).
# net.ipv4.tcp_rmem = 4096 12582912 16777216

# This is a vector of 3 integers: [min, default, max].
# These parameters are used by TCP to regulate send buffer sizes.
# TCP dynamically adjusts the size of the send buffer from the default
# values listed below, in the range of these values, depending on memory available.
# min - Minimum  size  of  the send buffer used by each TCP socket.
# The default value is the system page size.
# (On Linux 2.4, the default value is 4K bytes.)
# This value is used to ensure that in memory pressure mode,
# allocations below this size will still succeed.
# This is not used to bound the size of the send buffer declared using SO_SNDBUF on a socket.
# default - The default size of the send buffer for a TCP socket.
# This value overwrites the initial default buffer size from the generic
# global /proc/sys/net/core/wmem_default defined for  all protocols.
# The  default  value  is  16K  bytes.
# If larger send buffer sizes are desired, this value should be increased (to affect all sockets).
# To employ large TCP windows, the /proc/sys/net/ipv4/tcp_window_scaling must be set to a nonzero value (default).
# max - The maximum size of the send buffer used by each TCP socket.
# This value does not override the value in /proc/sys/net/core/wmem_max.
# This is not used to limit the size of the send buffer declared using SO_SNDBUF on a socket.
# The default value is calculated using the formula max(65536, min(4MB, tcp_mem[1]*PAGE_SIZE/128))
# (On Linux 2.4, the default value is 128K bytes, lowered 64K depending on low-memory systems.)
# net.ipv4.tcp_wmem = 4096 12582912 16777216
